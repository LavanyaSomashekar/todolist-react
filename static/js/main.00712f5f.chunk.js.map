{"version":3,"sources":["firebase/index.js","context/index.js","hooks/index.js","components/Sidebar.js","components/Main.js","images/logo.png","components/User.js","components/Modal.js","components/TodoForm.js","constants/index.js","components/AddNewTodo.js","components/Calendar.js","components/Projectform.js","components/AddNewProject.js","components/RenameProject.js","components/Project.js","components/Projects.js","components/Todo.js","components/Next7Days.js","components/Todos.js","components/EditTodo.js","App.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","TodoContext","createContext","TodoContextProvider","children","defaultProject","useState","selectedProject","setSelectedProject","undefined","selectedTodo","setSelectedTodo","todos","setTodos","useEffect","console","log","unsubscribe","firestore","collection","onSnapshot","snapshot","data","docs","map","doc","id","useTodos","projectsWithStats","projects","setProjectsWithStats","project","numOfTodos","filter","todo","projectName","name","checked","length","useProjectsWithStats","setProjects","useProjects","filteredTodos","setFilteredTodos","todayDateFormated","moment","format","date","todoDate","todayDate","diffDays","diff","useFilterTodos","Provider","value","Sidebar","useContext","sidebarRef","useRef","document","addEventListener","handleClick","removeEventListener","e","target","current","contains","className","ref","Main","User","src","logo","alt","href","Modal","showModal","setShowModal","modalRef","modalAnimation","useSpring","opacity","top","config","friction","onClick","div","style","TodoForm","handleSubmit","heading","text","setText","day","setDay","time","setTime","todoProject","setTodoProject","showButtons","utils","DateFnsUtils","onSubmit","type","onChange","placeholder","autoFocus","DatePicker","TimePicker","color","size","calendarItems","AddNewTodo","Date","preventDefault","includes","add","randomcolor","luminosity","Calendar","showMenu","setShowMenu","spin","transform","menuAnimation","display","lineHeight","item","ProjectForm","setValue","confirmButtonText","role","AddNewProject","setProjectName","projectsRef","where","get","then","querySnapshot","empty","alert","RenameProject","newProjectName","setNewProjectName","todosRef","oldProjectName","update","forEach","renameProject","Project","edit","fadeIn","from","marginTop","to","btnTransitions","useTransition","right","enter","leave","props","editProject","delete","deleteProject","Projects","setEdit","pencilColor","span","Todo","hover","setHover","handleDelete","deleteTodo","checkTransitions","position","onMouseEnter","onMouseLeave","checkTodo","nextDayDate","repeatedTodo","repeatNextDay","Next7Days","weekTodos","setWeekTodos","sortedTodosByDay","number","today","parseInt","arrangeDays","slice","concat","Todos","EditTodo","App","ReactDOM","render","getElementById"],"mappings":"oOAaAA,IAASC,cATc,CACrBC,OAAQ,0CACRC,WAAY,iCACZC,UAAW,iBACXC,cAAe,6BACfC,kBAAmB,eACnBC,MAAO,8CAKMP,QAAf,E,4BCbMQ,EAAcC,0BAEpB,SAASC,EAAT,GAAyC,IAAXC,EAAU,EAAVA,SACpBC,EAAiB,QACvB,EAA8CC,mBAASD,GAAvD,mBAAOE,EAAP,KAAwBC,EAAxB,KACA,EAAwCF,wBAASG,GAAjD,mBAAOC,EAAP,KAAqBC,EAArB,KAEMC,ECLH,WACH,MAA0BN,mBAAS,IAAnC,mBAAOM,EAAP,KAAcC,EAAd,KAqBA,OAnBAC,qBAAU,WACNC,QAAQC,IAAI,iBACZ,IAAIC,EAAcxB,EACjByB,YACAC,WAAW,SACXC,YAAY,SAAAC,GACT,IAAMC,EAAOD,EAASE,KAAKC,KAAK,SAAAC,GAC5B,OAAO,aACHC,GAAKD,EAAIC,IACND,EAAIH,WAGfP,QAAQC,IAAI,cACZH,EAASS,MAGb,OAAO,kBAAML,OACd,IAEIL,EDjBOe,GAERC,ECwEH,SAA8BC,EAAUjB,GAC3C,MAAkDN,mBAAS,IAA3D,mBAAOsB,EAAP,KAA0BE,EAA1B,KAaA,OAXAhB,qBAAU,WACN,IAAMQ,EAAOO,EAASL,KAAI,SAACO,GACvB,OAAO,aACHC,WAAapB,EAAMqB,QAAQ,SAAAC,GAAI,OAAIA,EAAKC,cAAgBJ,EAAQK,OAASF,EAAKG,WAASC,QACpFP,MAIXD,EAAqBR,KACtB,CAACO,EAAUjB,IAEPgB,EDtFmBW,CCgDvB,WACH,MAAgCjC,mBAAS,IAAzC,mBAAOuB,EAAP,KAAiBW,EAAjB,KAoBA,OAlBA1B,qBAAU,WACN,IAAIG,EAAcxB,EACjByB,YACAC,WAAW,YACXC,YAAY,SAAAC,GACT,IAAMC,EAAOD,EAASE,KAAKC,KAAK,SAAAC,GAE5B,MAAO,CACHC,GAAKD,EAAIC,GACTU,KAAOX,EAAIH,OAAOc,SAG1BI,EAAYlB,MAGhB,OAAO,kBAAML,OACd,IAEIY,EDtEUY,GACwC7B,GACnD8B,ECiBH,SAAwB9B,EAAOL,GAClC,MAA0CD,mBAAS,IAAnD,mBAAOoC,EAAP,KAAsBC,EAAtB,KA0BA,OAxBA7B,qBAAW,WACP,IAAIQ,EACEsB,EAAoBC,MAASC,OAAO,cAGtCxB,EADmB,UAApBf,EACQK,EAAMqB,QAAO,SAAAC,GAAI,OAAIA,EAAKa,OAASH,KACjB,gBAApBrC,EACEK,EAAMqB,QAAO,SAAAC,GAChB,IAAMc,EAAWH,IAAOX,EAAKa,KAAM,cAC7BE,EAAYJ,IAAOD,EAAmB,cAEtCM,EAAWF,EAASG,KAAKF,EAAW,QAE1C,OAAOC,GAAW,GAAKA,EAAW,KAEZ,aAApB3C,EACCK,EAEAA,EAAMqB,QAAO,SAAAC,GAAI,OAAIA,EAAKC,cAAgB5B,KAGrDoC,EAAiBrB,KAClB,CAACV,EAAOL,IAEJmC,ED5CeU,CAAexC,EAAOL,GAE5C,OACI,cAACN,EAAYoD,SAAb,CACIC,MACI,CACIjD,iBACAE,kBACAC,qBACAI,MAAQ8B,EACRb,SAAWD,EACXlB,eACAC,mBATZ,SAaKP,IEAEmD,MAzBf,YAA+B,IAAZnD,EAAW,EAAXA,SAEPO,EAAoB6C,qBAAWvD,GAA/BU,gBAGF8C,EAAaC,mBAEnB5C,qBAAU,WAGN,OAFA6C,SAASC,iBAAiB,QAASC,GAE5B,kBAAMF,SAASG,oBAAoB,QAASD,OAGvD,IAAMA,EAAc,SAAAE,IACbA,EAAEC,SAAWP,EAAWQ,SAAWR,EAAWQ,QAAQC,SAASH,EAAEC,UAChErD,OAAgBF,IAIxB,OACI,qBAAK0D,UAAU,UAAUC,IAAKX,EAA9B,SACKrD,KChBEiE,MAPf,YAA4B,IAAZjE,EAAW,EAAXA,SACZ,OACI,qBAAK+D,UAAU,OAAf,SACK/D,KCJE,MAA0B,iCCe1BkE,MAbf,YACI,OADuB,EAAXlE,SAER,sBAAK+D,UAAU,OAAf,UACI,qBAAKA,UAAU,OAAf,SACI,qBAAKI,IAAKC,EAAMC,IAAI,WAExB,sBAAKN,UAAU,OAAf,UACI,+CACA,mBAAGO,KAAK,IAAR,4B,QCkBDC,MAzBf,YAAqD,IAArCvE,EAAoC,EAApCA,SAAUwE,EAA0B,EAA1BA,UAAWC,EAAe,EAAfA,aAC3BC,EAAWpB,mBASXqB,EAAiBC,oBAAU,CAC7BC,QAAUL,EAAY,EAAI,EAC1BM,IAAMN,EAAY,MAAQ,KAC1BO,OAAS,CAAEC,SAAW,MAG1B,OACIR,GACA,qBAAKT,UAAU,QAAQC,IAAKU,EAAUO,QAfvB,SAACtB,GACbA,EAAEC,SAAWc,EAASb,SACrBY,GAAa,IAajB,SACI,cAAC,WAASS,IAAV,CAAcC,MAAOR,EAAgBZ,UAAU,YAA/C,SACK/D,O,gFC2EFoF,MA5Ff,YAUG,IATCC,EASF,EATEA,aASF,IAREC,eAQF,SAPEC,EAOF,EAPEA,KAAMC,EAOR,EAPQA,QACNC,EAMF,EANEA,IAAKC,EAMP,EANOA,OACLC,EAKF,EALEA,KAAMC,EAKR,EALQA,QACNC,EAIF,EAJEA,YAAaC,EAIf,EAJeA,eACbrE,EAGF,EAHEA,SAGF,IAFEsE,mBAEF,aADEtB,oBACF,SAEE,OACI,cAAC,IAAD,CAAyBuB,MAAOC,IAAhC,SACY,uBAAMC,SAAUb,EAActB,UAAU,WAAxC,UACI,sBAAKA,UAAU,OAAf,UAEQuB,GACA,6BAAKA,IAET,uBACIa,KAAK,OACLjD,MAAOqC,EACPa,SAAU,SAAAzC,GAAC,OAAI6B,EAAQ7B,EAAEC,OAAOV,QAChCmD,YAAY,YACZC,WAAS,OAGjB,sBAAKvC,UAAU,SAAf,UACI,cAAC,IAAD,IACA,8CAEJ,sBAAKA,UAAU,WAAf,UACI,sBAAKA,UAAU,QAAf,UACI,cAAC,IAAD,IACA,gDAEJ,cAACwC,EAAA,EAAD,CACIrD,MAAOuC,EACPW,SAAU,SAAAX,GAAG,OAAIC,EAAOD,SAGhC,sBAAK1B,UAAU,YAAf,UACI,sBAAKA,UAAU,QAAf,UACI,cAAC,IAAD,IACA,+CAEJ,cAACyC,EAAA,EAAD,CACItD,MAAOyC,EACPS,SAAU,SAAAT,GAAI,OAAIC,EAAQD,SAGlC,sBAAK5B,UAAU,eAAf,UACI,sBAAKA,UAAU,QAAf,UACI,cAAC,IAAD,IACA,kDAEJ,qBAAKA,UAAU,WAAf,SAEQtC,EAASS,OAAS,EAClBT,EAASL,KAAK,SAAAO,GAAO,OACjB,qBACIoC,UAAS,kBAAa8B,IAAgBlE,EAAQK,KAAO,SAAW,IAChEiD,QAAS,kBAAMa,EAAenE,EAAQK,OAF1C,SAKKL,EAAQK,MAFJL,EAAQL,OAMrB,qBAAK6D,MAAO,CAACsB,MAAM,WAAnB,yDAORV,GACA,gCACI,qBAAKhC,UAAU,SAASkB,QAAS,kBAAMR,GAAa,IAApD,SACI,cAAC,IAAD,CAAGiC,KAAK,SAEZ,qBAAK3C,UAAU,UAAf,SACI,4DCzFvB4C,EAAgB,CAAC,QAAS,cAAe,Y,0BC0EvCC,MAjEf,WAEI,MAAsCxD,qBAAWvD,GAAzC4B,EAAR,EAAQA,SAAUtB,EAAlB,EAAkBA,gBAElB,EAAkCD,oBAAS,GAA3C,mBAAOsE,EAAP,KAAkBC,EAAlB,KACA,EAAwBvE,mBAAS,IAAjC,mBAAOqF,EAAP,KAAaC,EAAb,KACA,EAAsBtF,mBAAS,IAAI2G,MAAnC,mBAAOpB,EAAP,KAAYC,EAAZ,KACA,EAAwBxF,mBAAS,IAAI2G,MAArC,mBAAOlB,EAAP,KAAaC,EAAb,KACA,EAAsC1F,mBAASC,GAA/C,mBAAO0F,EAAP,KAAoBC,EAApB,KA8BA,OAJApF,qBAAW,WACPoF,EAAe3F,KAChB,CAACA,IAGA,sBAAK4D,UAAU,aAAf,UACI,qBAAKA,UAAU,MAAf,SACI,wBAAQkB,QAAS,kBAAMR,GAAa,IAApC,0BAIJ,cAAC,EAAD,CAAOD,UAAWA,EAAWC,aAAcA,EAA3C,SACI,cAAC,EAAD,CACIY,aArChB,SAAsB1B,GAClBA,EAAEmD,iBACEvB,IAASoB,EAAcI,SAASlB,KAChCxG,IACKyB,YACAC,WAAW,SACXiG,IACG,CACIzB,KAAOA,EACP5C,KAAOF,IAAOgD,GAAK/C,OAAO,cAC1B+C,IAAMhD,IAAOgD,GAAK/C,OAAO,KACzBiD,KAAOlD,IAAOkD,GAAMjD,OAAO,WAC3BT,SAAU,EACVwE,MAAQQ,IAAY,CAACC,WAAa,SAClCnF,YAAc8D,IAGtBpB,GAAa,GACbe,EAAQ,IACRE,EAAO,IAAImB,MACXjB,EAAQ,IAAIiB,QAkBRvB,QAAU,iBACVC,KAAQA,EACRC,QAASA,EACTC,IAAKA,EACLC,OAAQA,EACRC,KAAMA,EACNC,QAASA,EACTC,YAAaA,EACbC,eAAgBA,EAChBrE,SAAUA,EACVsE,aAAa,EACbtB,aAAcA,U,kBCnBnB0C,MA3Cf,WAEI,MAAgCjH,oBAAS,GAAzC,mBAAOkH,EAAP,KAAiBC,EAAjB,KAGQjH,EAAuBgD,qBAAWvD,GAAlCO,mBAGFkH,EAAO1C,oBAAU,CACnB2C,UAAYH,EAAW,eAAiB,iBACxCrC,OAAS,CAAEC,SAAW,MAGpBwC,EAAgB5C,oBAAU,CAC5B6C,QAAUL,EAAW,QAAU,OAC/BM,WAAaN,EAAW,IAAM,IAGlC,OACI,sBAAKrD,UAAU,WAAf,UACI,sBAAKA,UAAU,SAAf,UACI,sBAAKA,UAAU,QAAf,UACI,cAAC,IAAD,CAAc2C,KAAK,OACnB,4CAEJ,cAAC,WAASxB,IAAV,CAAcC,MAAOmC,EAAMrC,QAAS,kBAAMoC,GAAaD,IAAWrD,UAAU,OAA5E,SACI,+BACI,cAAC,IAAD,CAAS2C,KAAK,cAI1B,cAAC,WAASxB,IAAV,CAAcC,MAAOqC,EAAezD,UAAU,QAA9C,SAEQ4C,EAAcvF,KAAK,SAAAuG,GAAI,OACnB,qBAAK5D,UAAU,OAAkBkB,QAAU,kBAAM7E,EAAmBuH,IAApE,SACKA,GADsBA,Y,SCjBpCC,MArBf,YAAiG,IAA1EvC,EAAyE,EAAzEA,aAAcC,EAA2D,EAA3DA,QAASpC,EAAkD,EAAlDA,MAAO2E,EAA2C,EAA3CA,SAAUpD,EAAiC,EAAjCA,aAAcqD,EAAmB,EAAnBA,kBACzE,OACI,uBAAM5B,SAAUb,EAActB,UAAU,cAAxC,UACI,6BAAKuB,IACL,uBACIpC,MAAOA,EACPkD,SAAU,SAACzC,GAAD,OAAOkE,EAASlE,EAAEC,OAAOV,QACnCiD,KAAK,OACLE,YAAY,sBACZC,WAAS,IAEb,wBAAQvC,UAAU,SAASgE,KAAK,SAAS9C,QAAS,kBAAMR,GAAa,IAArE,oBAGA,wBAAQV,UAAU,UAAlB,SACK+D,Q,SCoCFE,MAhDf,WAEI,MAAkC9H,oBAAS,GAA3C,mBAAOsE,EAAP,KAAkBC,EAAlB,KACA,EAAsCvE,mBAAS,IAA/C,mBAAO6B,EAAP,KAAoBkG,EAApB,KAyBA,OACI,sBAAKlE,UAAU,gBAAf,UACI,qBAAKA,UAAU,aAAf,SACI,sBAAMkB,QAAS,kBAAMR,GAAa,IAAlC,SACI,cAAC,IAAD,CAAMiC,KAAK,WAGnB,cAAC,EAAD,CAAOlC,UAAWA,EAAWC,aAAcA,EAA3C,SACI,cAAC,EAAD,CACIY,aAhChB,SAAsB1B,GAElB,GADAA,EAAEmD,iBACE/E,EAAa,CACb,IAAMmG,EAAc7I,EAASyB,YAAYC,WAAW,YACpDmH,EACKC,MAAM,OAAQ,KAAMpG,GACpBqG,MACAC,MAAM,SAAAC,GACAA,EAAcC,MACbL,EACKlB,IACG,CACIhF,KAAOD,IAInByG,MAAM,8BAGd/D,GAAa,GACbwD,EAAe,MAaX3C,QAAQ,cACRpC,MAAOnB,EACP8F,SAAUI,EACVxD,aAAcA,EACdqD,kBAAkB,wB,kBCsBvBW,MAjEf,YAAgD,IAAxB9G,EAAuB,EAAvBA,QAAS8C,EAAc,EAAdA,aAC7B,EAA4CvE,mBAASyB,EAAQK,MAA7D,mBAAO0G,EAAP,KAAuBC,EAAvB,KAGA,EAAgDvF,qBAAWvD,GAAnDM,EAAR,EAAQA,gBAAiBC,EAAzB,EAAyBA,mBAgDzB,OACI,qBAAK2D,UAAU,gBAAf,SACI,cAAC,EAAD,CACIsB,aARZ,SAAsB1B,GAClBA,EAAEmD,iBAzCgB,SAACnF,EAAS+G,GAC5B,IAAMR,EAAc7I,IAASyB,YAAYC,WAAW,YAC9C6H,EAAWvJ,IAASyB,YAAYC,WAAW,SAElC8H,EAAmBlH,EAA1BK,KAERkG,EACKC,MAAM,OAAQ,KAAMO,GACpBN,MACAC,MAAM,SAAAC,GACCA,EAAcC,MAGdL,EACK7G,IAAIM,EAAQL,IACZwH,OAAO,CACJ9G,KAAO0G,IAEVL,MAAM,WACHO,EACKT,MAAM,cAAe,KAAMU,GAC3BT,MACAC,MAAM,SAAAC,GACHA,EAAcS,SAAS,SAAA1H,GACnBA,EAAI2C,IAAI8E,OAAO,CACX/G,YAAc2G,UAIzBL,MAAM,WACAlI,IAAoB0I,GACnBzI,EAAmBsI,SApBvCF,MAAM,iDA+BlBQ,CAAcrH,EAAS+G,GACvBjE,GAAa,IAMLa,QAAQ,oBACRpC,MAAOwF,EACPb,SAAUc,EACVlE,aAAcA,EACdqD,kBAAkB,eCoBnBmB,MA5Ef,YAAkC,IAAhBtH,EAAe,EAAfA,QAASuH,EAAM,EAANA,KAEvB,EAAgE9F,qBAAWvD,GAAnEI,EAAR,EAAQA,eAAgBE,EAAxB,EAAwBA,gBAAiBC,EAAzC,EAAyCA,mBAGzC,EAAkCF,oBAAS,GAA3C,mBAAOsE,EAAP,KAAkBC,EAAlB,KA4BM0E,EAASvE,oBAAU,CACrBwE,KAAO,CAAEC,UAAY,QAASxE,QAAU,GACxCyE,GAAK,CAAED,UAAY,MAAOxE,QAAU,KAElC0E,EAAiBC,wBAAcN,EAAM,CACvCE,KAAO,CAAEvE,QAAU,EAAG4E,MAAQ,SAC9BC,MAAQ,CAAE7E,QAAU,EAAG4E,MAAQ,OAC/BE,MAAQ,CAAE9E,QAAU,EAAG4E,MAAQ,WAGnC,OACI,eAAC,WAASvE,IAAV,CAAcC,MAAOgE,EAAQpF,UAAU,UAAvC,UACI,qBAAKA,UAAU,OAAOkB,QAAU,kBAAM7E,EAAmBuB,EAAQK,OAAjE,SACKL,EAAQK,OAEb,qBAAK+B,UAAU,OAAf,SAEQwF,GAAe,SAACK,EAAOC,GAAR,OACXA,EACA,eAAC,WAAS3E,IAAV,CAAcC,MAAOyE,EAAO7F,UAAU,cAAtC,UACI,sBAAMA,UAAU,OAAOkB,QAAS,kBAAMR,GAAa,IAAnD,SACI,cAAC,IAAD,CAAQiC,KAAK,SAEjB,sBAAM3C,UAAU,SAASkB,QAAU,kBAjDrC,SAAAtD,GAClBtC,IACKyB,YACAC,WAAW,YACXM,IAAIM,EAAQL,IACZwI,SACAzB,MAAM,WACHhJ,IACKyB,YACAC,WAAW,SACXoH,MAAM,cAAe,KAAMxG,EAAQK,MACnCoG,MACAC,MAAM,SAACC,GACJA,EAAcS,SAAS,SAAA1H,GACnBA,EAAI2C,IAAI8F,kBAIvBzB,MAAM,WACClI,IAAoBwB,EAAQK,MAC5B5B,EAAmBH,MA6B8B8J,CAAcpI,IAAvD,SACI,cAAC,IAAD,CAAS+E,KAAK,YAIC,IAAvB/E,EAAQC,WACR,GAEA,cAAC,WAASsD,IAAV,CAAcC,MAAOyE,EAAO7F,UAAU,cAAtC,SACKpC,EAAQC,kBAKzB,cAAC,EAAD,CAAO4C,UAAWA,EAAWC,aAAcA,EAA3C,SACI,cAAC,EAAD,CAAe9C,QAASA,EAAS8C,aAAcA,UChBhDuF,MAxDf,WACI,MAAgC9J,oBAAS,GAAzC,mBAAOkH,EAAP,KAAiBC,EAAjB,KACA,EAAwBnH,oBAAS,GAAjC,mBAAOgJ,EAAP,KAAae,EAAb,KACMC,EAAchB,EAAO,UAAY,UAG/BzH,EAAa2B,qBAAWvD,GAAxB4B,SAGD6F,EAAO1C,oBAAU,CACpB2C,UAAYH,EAAW,eAAiB,iBACxCrC,OAAS,CAAEC,SAAW,MAGpBwC,EAAgB5C,oBAAU,CAC5B6C,QAAUL,EAAW,QAAU,OAC/BM,WAAaN,EAAW,IAAM,IAGlC,OACI,sBAAKrD,UAAU,WAAf,UACI,sBAAKA,UAAU,SAAf,UACI,sBAAKA,UAAU,QAAf,UACI,cAAC,IAAD,CAAS2C,KAAK,OACd,4CAEJ,sBAAK3C,UAAU,OAAf,UAEQqD,GAAY3F,EAASS,OAAS,GAC9B,sBAAM6B,UAAU,OAAOkB,QAAU,kBAAMgF,GAAQ,SAAAf,GAAI,OAAKA,MAAxD,SACI,cAAC,IAAD,CAAYxC,KAAK,KAAKD,MAAOyD,MAGrC,cAAC,EAAD,IACA,cAAC,WAASC,KAAV,CACIpG,UAAU,QACVkB,QAAS,kBAAMoC,GAAaD,IAC5BjC,MAAOmC,EAHX,SAII,cAAC,IAAD,CAASZ,KAAK,eAI1B,cAAC,WAASxB,IAAV,CAAcC,MAAOqC,EAAezD,UAAU,QAA9C,SAEQtC,EAASL,KAAK,SAAAO,GAAO,OACjB,cAAC,EAAD,CACIA,QAASA,EAETuH,KAAMA,GADDvH,EAAQL,a,oCC8D1B8I,MA7Gf,YAAsB,IAAPtI,EAAM,EAANA,KAEX,EAA0B5B,oBAAS,GAAnC,mBAAOmK,EAAP,KAAcC,EAAd,KAGA,EAAyClH,qBAAWvD,GAA5CS,EAAR,EAAQA,aAAcC,EAAtB,EAAsBA,gBAsChBgK,EAAe,SAAAzI,IApCF,SAAAA,GACfzC,EACKyB,YACAC,WAAW,SACXM,IAAIS,EAAKR,IACTwI,SAgCLU,CAAW1I,GAERxB,IAAiBwB,GAChBvB,GAAgB,IAKlB4I,EAASvE,oBAAU,CACrBwE,KAAO,CAAEC,UAAY,QAASxE,QAAU,GACxCyE,GAAK,CAAED,UAAY,MAAOxE,QAAU,KAGlC4F,EAAmBjB,wBAAc1H,EAAKG,QAAS,CACjDmH,KAAO,CAAEsB,SAAW,WAAYnD,UAAY,YAC5CmC,MAAQ,CAAEnC,UAAY,YACtBoC,MAAQ,CAAEpC,UAAY,cAG1B,OACI,cAAC,WAASrC,IAAV,CAAcC,MAAOgE,EAAQpF,UAAU,OAAvC,SACI,sBACIA,UAAU,iBACV4G,aAAc,kBAAML,GAAS,IAC7BM,aAAc,kBAAMN,GAAS,IAHjC,UAKI,qBAAKvG,UAAU,aAAakB,QAAU,kBAvDhC,SAAAnD,GACdzC,EACKyB,YACAC,WAAW,SACXM,IAAIS,EAAKR,IACTwH,OAAO,CACJ7G,SAAWH,EAAKG,UAiD4B4I,CAAU/I,IAAtD,SAEQ2I,GAAiB,SAACb,EAAO3H,GAAR,OACbA,EACA,cAAC,WAASkI,KAAV,CAAehF,MAAOyE,EAAO7F,UAAU,UAAvC,SACI,cAAC,IAAD,CAAiB0C,MAAM,cAG3B,cAAC,WAAS0D,KAAV,CAAehF,MAAOyE,EAAO7F,UAAU,YAAvC,SACI,cAAC,IAAD,CAAQ0C,MAAO3E,EAAK2E,eAKpC,sBAAK1C,UAAU,OAAOkB,QAAU,kBAAM1E,EAAgBuB,IAAtD,UACI,mBAAGqD,MAAO,CAACsB,MAAQ3E,EAAKG,QAAU,UAAY,WAA9C,SAA2DH,EAAKyD,OAChE,iCAAOzD,EAAK6D,KAAZ,MAAqB7D,EAAKC,eAC1B,qBAAKgC,UAAS,eAAUjC,EAAKG,QAAU,eAAiB,SAE5D,qBAAK8B,UAAU,kBAAkBkB,QAAS,kBAhEhC,SAAAnD,GAClB,IAAMgJ,EAAcrI,IAAOX,EAAKa,KAAM,cAAcqE,IAAI,EAAG,QAErD+D,EAAY,2BACXjJ,GADW,IAEdG,SAAU,EACVU,KAAOmI,EAAYpI,OAAO,cAC1B+C,IAAMqF,EAAYpI,OAAO,cAGtBqI,EAAazJ,GAEpBjC,EACKyB,YACAC,WAAW,SACXiG,IAAI+D,GAiD+CC,CAAclJ,IAA9D,SAEQA,EAAKG,SACL,+BACI,cAAC,IAAD,QAIZ,qBAAK8B,UAAU,cAAckB,QAAU,kBAAMsF,EAAazI,IAA1D,UAESuI,GAASvI,EAAKG,UACf,+BACI,cAAC,IAAD,cCvDbgJ,MAjDf,YAA+B,IAAVzK,EAAS,EAATA,MACjB,EAAkCN,mBAAS,IAA3C,mBAAOgL,EAAP,KAAkBC,EAAlB,KAmBA,OAjBAzK,qBAAU,WACN,IAEM0K,EAFO,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAEdhK,KAAI,SAAAqE,GAC9B,MAAO,CACHjF,MAAOA,EAAMqB,QAAO,SAAAC,GAAI,OAAIA,EAAK2D,MAAQA,KACzC4F,OAAQ5F,MAIV6F,EAAQC,SAAS9I,MAASC,OAAO,MAEjC8I,EAAcJ,EAAiBK,MAAMH,GAAOI,OAAON,EAAiBK,MAAM,EAAGH,IAEnFH,EAAaK,KACd,CAAChL,IAGA,qBAAKuD,UAAU,YAAf,SAEQmH,EAAU9J,KAAI,SAAAqE,GAAG,OACb,gCACI,sBAAK1B,UAAU,MAAf,UACI,sBAAKA,UAAU,OAAf,UACKtB,IAAOgD,EAAI4F,OAAQ,KAAK3I,OAAO,QAC/B+C,EAAI4F,SAAW5I,MAASC,OAAO,MAAQ,cAE5C,sBAAKqB,UAAU,cAAf,cACM0B,EAAIjF,MAAM0B,OADhB,UAIJ,qBAAK6B,UAAU,QAAf,SAEQ0B,EAAIjF,MAAMY,KAAI,SAAAU,GAAI,OACd,cAAC,EAAD,CAAoBA,KAAMA,GAAfA,EAAKR,WAbtBmE,EAAI4F,cCFnBM,OArBf,WACI,MAAmCvI,qBAAWvD,GAAtCW,EAAR,EAAQA,MAAOL,EAAf,EAAeA,gBAEf,OACI,sBAAK4D,UAAU,QAAf,UACI,qBAAKA,UAAU,mBAAf,SACK5D,IAEL,qBAAK4D,UAAU,QAAf,SAE4B,gBAApB5D,EACA,cAAC,EAAD,CAAWK,MAAOA,IAElBA,EAAMY,KAAI,SAAAU,GAAI,OACV,cAAC,EAAD,CAAMA,KAAMA,GAAWA,EAAKR,aCqDrCsK,OAlEf,WAEI,MAAwB1L,mBAAS,IAAjC,mBAAOqF,EAAP,KAAaC,EAAb,KACA,EAAsBtF,mBAAS,IAAI2G,MAAnC,mBAAOpB,EAAP,KAAYC,EAAZ,KACA,EAAwBxF,mBAAS,IAAI2G,MAArC,mBAAOlB,EAAP,KAAaC,EAAb,KACA,EAAsC1F,mBAAS,IAA/C,mBAAO2F,EAAP,KAAoBC,EAApB,KAGA,EAAmC1C,qBAAWvD,GAAtCS,EAAR,EAAQA,aAAcmB,EAAtB,EAAsBA,SA+BtB,OA7BAf,qBAAU,WACHJ,IACCkF,EAAQlF,EAAaiF,MACrBG,EAAOjD,IAAOnC,EAAaqC,KAAM,eACjCiD,EAAQnD,IAAOnC,EAAaqF,KAAM,YAClCG,EAAexF,EAAayB,gBAEjC,CAACzB,IAEJI,qBAAU,WACHJ,GACCjB,IACKyB,YACAC,WAAW,SACXM,IAAIf,EAAagB,IACjBwH,OAAO,CACJvD,OACA5C,KAAOF,IAAOgD,GAAK/C,OAAO,cAC1B+C,IAAMhD,IAAOgD,GAAK/C,OAAO,KACzBiD,KAAOlD,IAAOkD,GAAMjD,OAAO,WAC3BX,YAAc8D,MAI3B,CAACN,EAAME,EAAKE,EAAME,IAMjB,8BAEQvF,GACI,sBAAKyD,UAAU,WAAf,UACI,qBAAKA,UAAU,SAAf,uBAGA,qBAAKA,UAAU,YAAf,SACI,cAAC,EAAD,CACQsB,aAbhC,SAAsB1B,KAcU4B,KAAQA,EACRC,QAASA,EACTC,IAAKA,EACLC,OAAQA,EACRC,KAAMA,EACNC,QAASA,EACTC,YAAaA,EACbC,eAAgBA,EAChBrE,SAAUA,YCpC/BoK,OAlBf,WACE,OACE,sBAAK9H,UAAU,MAAf,UACE,eAAC,EAAD,WACE,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,OAGF,eAAC,EAAD,WACE,cAAC,GAAD,IACA,cAAC,GAAD,WChBR+H,IAASC,OACP,cAAChM,EAAD,UACM,cAAC,GAAD,MAEJwD,SAASyI,eAAe,W","file":"static/js/main.00712f5f.chunk.js","sourcesContent":["import firebase from 'firebase/compat/app';\r\nimport 'firebase/compat/auth';\r\nimport 'firebase/compat/firestore';\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyA6hTnW2xCMJPzobf6G1smu5aOtMAA53NA\",\r\n  authDomain: \"todo-app-ad67e.firebaseapp.com\",\r\n  projectId: \"todo-app-ad67e\",\r\n  storageBucket: \"todo-app-ad67e.appspot.com\",\r\n  messagingSenderId: \"546894875617\",\r\n  appId: \"1:546894875617:web:124d1087a32bbdbe90e0a0\"\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport default firebase;","import React, { createContext, useState } from 'react'\r\nimport { useTodos, useProjects, useFilterTodos, useProjectsWithStats } from '../hooks'\r\nconst TodoContext = createContext()\r\n\r\nfunction TodoContextProvider({children}){\r\n    const defaultProject = 'today'\r\n    const [selectedProject, setSelectedProject] = useState(defaultProject)\r\n    const [selectedTodo, setSelectedTodo] = useState(undefined)\r\n\r\n    const todos = useTodos()\r\n    const projects = useProjects()\r\n    const projectsWithStats = useProjectsWithStats(projects, todos)\r\n    const filteredTodos = useFilterTodos(todos, selectedProject)\r\n\r\n    return (\r\n        <TodoContext.Provider\r\n            value={\r\n                {\r\n                    defaultProject,\r\n                    selectedProject,\r\n                    setSelectedProject,\r\n                    todos : filteredTodos,\r\n                    projects : projectsWithStats,\r\n                    selectedTodo,\r\n                    setSelectedTodo\r\n                }\r\n            }\r\n        >\r\n            {children}\r\n        </TodoContext.Provider>\r\n    )\r\n}\r\n\r\nexport { TodoContextProvider, TodoContext }","import { useState, useEffect } from 'react'\r\nimport firebase from '../firebase'\r\nimport moment from 'moment'\r\n\r\nexport function useTodos(){\r\n    const [todos, setTodos] = useState([])\r\n\r\n    useEffect(() => {\r\n        console.log('Effect called')\r\n        let unsubscribe = firebase\r\n        .firestore()\r\n        .collection('todos')\r\n        .onSnapshot( snapshot => {\r\n            const data = snapshot.docs.map( doc => {\r\n                return {\r\n                    id : doc.id,\r\n                    ...doc.data()\r\n                }\r\n            })\r\n            console.log('subscribed')\r\n            setTodos(data)\r\n        })\r\n\r\n        return () => unsubscribe()\r\n    }, [])\r\n\r\n    return todos\r\n}\r\n\r\nexport function useFilterTodos(todos, selectedProject){\r\n    const [filteredTodos, setFilteredTodos] = useState([])\r\n\r\n    useEffect( () => {\r\n        let data;\r\n        const todayDateFormated = moment().format('MM/DD/YYYY')\r\n\r\n        if(selectedProject === 'today'){\r\n            data = todos.filter(todo => todo.date === todayDateFormated)\r\n        }else if(selectedProject === 'next 7 days'){\r\n            data = todos.filter(todo => {\r\n                const todoDate = moment(todo.date, 'MM/DD/YYYY')\r\n                const todayDate = moment(todayDateFormated, 'MM/DD/YYYY')\r\n\r\n                const diffDays = todoDate.diff(todayDate, 'days')\r\n\r\n                return diffDays >=0 && diffDays < 7\r\n            })\r\n        }else if( selectedProject === 'all days'){\r\n            data = todos\r\n        }else{\r\n            data = todos.filter(todo => todo.projectName === selectedProject)\r\n        }\r\n\r\n        setFilteredTodos(data)\r\n    }, [todos, selectedProject])\r\n\r\n    return filteredTodos\r\n}\r\n\r\nexport function useProjects(){\r\n    const [projects, setProjects] = useState([])\r\n\r\n    useEffect(() => {\r\n        let unsubscribe = firebase\r\n        .firestore()\r\n        .collection('projects')\r\n        .onSnapshot( snapshot => {\r\n            const data = snapshot.docs.map( doc => {               \r\n\r\n                return {\r\n                    id : doc.id,\r\n                    name : doc.data().name\r\n                }\r\n            })\r\n            setProjects(data)\r\n        })\r\n\r\n        return () => unsubscribe()\r\n    }, [])\r\n\r\n    return projects\r\n}\r\n\r\nexport function useProjectsWithStats(projects, todos){\r\n    const [projectsWithStats, setProjectsWithStats] = useState([])\r\n\r\n    useEffect(() => {\r\n        const data = projects.map((project) => {\r\n            return {\r\n                numOfTodos : todos.filter( todo => todo.projectName === project.name && !todo.checked).length,\r\n                ...project\r\n            }\r\n        })\r\n\r\n        setProjectsWithStats(data)\r\n    }, [projects, todos])\r\n\r\n    return projectsWithStats\r\n}","import React, {useContext,useEffect,useRef} from \"react\";\r\nimport { TodoContext } from '../context'\r\n\r\nfunction Sidebar({ children }){\r\n    // CONTEXT\r\n    const { setSelectedTodo } = useContext(TodoContext)\r\n\r\n    // REF\r\n    const sidebarRef = useRef()\r\n\r\n    useEffect(() => {\r\n        document.addEventListener('click', handleClick)\r\n\r\n        return () => document.removeEventListener('click', handleClick)\r\n    })\r\n\r\n    const handleClick = e => {\r\n        if(e.target === sidebarRef.current || sidebarRef.current.contains(e.target)){\r\n            setSelectedTodo(undefined)\r\n        }\r\n    }\r\n\r\n    return(\r\n        <div className=\"Sidebar\" ref={sidebarRef}>\r\n            {children}\r\n        </div>\r\n    )\r\n}\r\nexport default Sidebar","import React from \"react\";\r\nfunction Main({ children }){\r\n    return(\r\n        <div className=\"Main\">\r\n            {children}\r\n        </div>\r\n    )\r\n}\r\nexport default Main","export default __webpack_public_path__ + \"static/media/logo.e26a1623.png\";","import React from \"react\";\r\nimport logo from \"../images/logo.png\";\r\nfunction User({ children }){\r\n    return(\r\n        <div className=\"User\">\r\n            <div className=\"logo\">\r\n                <img src={logo} alt=\"logo\"></img>\r\n            </div>\r\n            <div className=\"info\">\r\n                <p>Code Explained</p>\r\n                <a href=\"#\">Logout!</a>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default User","import React, {useRef} from \"react\";\r\nimport  { useSpring, animated } from 'react-spring'\r\n\r\nfunction Modal({children, showModal, setShowModal}) {\r\n    const modalRef = useRef()\r\n\r\n    const closeModal = (e) => {\r\n        if(e.target === modalRef.current){\r\n            setShowModal(false)\r\n        }\r\n    }\r\n\r\n    // ANIMATION\r\n    const modalAnimation = useSpring({\r\n        opacity : showModal ? 1 : 0,\r\n        top : showModal ? '25%' : '0%',\r\n        config : { friction : 10 }\r\n    })\r\n\r\n    return(\r\n        showModal && \r\n        <div className=\"Modal\" ref={modalRef} onClick={closeModal}>\r\n            <animated.div style={modalAnimation} className=\"container\">\r\n                {children}\r\n            </animated.div>\r\n        </div>\r\n    )\r\n}\r\nexport default Modal","import React from \"react\"\r\nimport { Bell, CalendarDay, Clock, Palette, X } from \"react-bootstrap-icons\";\r\nimport { DatePicker, TimePicker, MuiPickersUtilsProvider } from '@material-ui/pickers';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport setDay from \"date-fns/setDay\";\r\n\r\nfunction TodoForm({\r\n    handleSubmit,\r\n    heading = false,\r\n    text, setText,\r\n    day, setDay,\r\n    time, setTime,\r\n    todoProject, setTodoProject,\r\n    projects,\r\n    showButtons = false,\r\n    setShowModal = false\r\n}){\r\n    \r\n    return(\r\n        <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                    <form onSubmit={handleSubmit} className='TodoForm'>\r\n                        <div className=\"text\">\r\n                            {\r\n                                heading &&\r\n                                <h3>{heading}</h3>\r\n                            }\r\n                            <input \r\n                                type='text'\r\n                                value={text}\r\n                                onChange={e => setText(e.target.value)}\r\n                                placeholder='To do ...'\r\n                                autoFocus>\r\n                            </input>\r\n                        </div>\r\n                        <div className=\"remind\">\r\n                            <Bell />\r\n                            <p>Remind Me!</p>\r\n                        </div>\r\n                        <div className=\"pick-day\">\r\n                            <div className=\"title\">\r\n                                <CalendarDay></CalendarDay>\r\n                                <p>Choose a day</p>\r\n                            </div>\r\n                            <DatePicker\r\n                                value={day}\r\n                                onChange={day => setDay(day)} \r\n                            ></DatePicker>\r\n                        </div>\r\n                        <div className=\"pick-time\">\r\n                            <div className=\"title\">\r\n                                <Clock></Clock>\r\n                                <p>Choose time</p>\r\n                            </div>\r\n                            <TimePicker\r\n                                value={time}\r\n                                onChange={time => setTime(time)}\r\n                            ></TimePicker>\r\n                        </div>\r\n                        <div className=\"pick-project\">\r\n                            <div className=\"title\">\r\n                                <Palette></Palette>\r\n                                <p>Choose project</p>\r\n                            </div>\r\n                            <div className=\"projects\">\r\n                                {\r\n                                    projects.length > 0 ?\r\n                                    projects.map( project =>\r\n                                        <div \r\n                                            className={`project ${todoProject === project.name ? \"active\" : \"\"}`}\r\n                                            onClick={() => setTodoProject(project.name)} \r\n                                            key={project.id}\r\n                                        >\r\n                                            {project.name}\r\n                                        </div>\r\n                                    )\r\n                                    :\r\n                                    <div style={{color:'#ff0000'}}>\r\n                                        Please add a project before proceeding\r\n                                    </div>\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                        {\r\n                            showButtons &&\r\n                            <div>\r\n                                <div className=\"cancel\" onClick={() => setShowModal(false)}>\r\n                                    <X size='40'></X>\r\n                                </div>\r\n                                <div className=\"confirm\">\r\n                                    <button>+ Add to do</button>\r\n                                </div>\r\n                            </div>\r\n                        }\r\n                        \r\n                    </form>\r\n        </MuiPickersUtilsProvider>\r\n    )\r\n}\r\nexport default TodoForm","export const calendarItems = ['today', 'next 7 days', 'all days']\r\n","import React, {useContext, useEffect, useState} from \"react\"\r\nimport Modal from './Modal'\r\nimport TodoForm from \"./TodoForm\";\r\nimport { TodoContext } from '../context'\r\nimport { calendarItems } from '../constants'\r\nimport firebase from \"@firebase/app-compat\";\r\nimport moment from \"moment\";\r\nimport randomcolor from \"randomcolor\";\r\n\r\nfunction AddNewTodo(){\r\n    // Context\r\n    const { projects, selectedProject } = useContext(TodoContext)\r\n    // State\r\n    const [showModal, setShowModal] = useState(false)\r\n    const [text, setText] = useState('')\r\n    const [day, setDay] = useState(new Date())\r\n    const [time, setTime] = useState(new Date())\r\n    const [todoProject, setTodoProject] = useState(selectedProject)\r\n\r\n    function handleSubmit(e){\r\n        e.preventDefault()\r\n        if( text && !calendarItems.includes(todoProject)){\r\n            firebase\r\n                .firestore()\r\n                .collection('todos')\r\n                .add(\r\n                    {\r\n                        text : text,\r\n                        date : moment(day).format('MM/DD/YYYY'),\r\n                        day : moment(day).format('d'),\r\n                        time : moment(time).format('hh:mm A'),\r\n                        checked : false,\r\n                        color : randomcolor({luminosity : 'dark'}),\r\n                        projectName : todoProject\r\n                    }\r\n                )\r\n                setShowModal(false)\r\n                setText('')\r\n                setDay(new Date())\r\n                setTime(new Date())\r\n        }\r\n    }\r\n\r\n    useEffect( () => {\r\n        setTodoProject(selectedProject)\r\n    }, [selectedProject])\r\n\r\n    return(\r\n        <div className=\"AddNewTodo\">\r\n            <div className=\"btn\">\r\n                <button onClick={() => setShowModal(true)}>\r\n                    + New Todo \r\n                </button>\r\n            </div>\r\n            <Modal showModal={showModal} setShowModal={setShowModal}>\r\n                <TodoForm \r\n                    handleSubmit={handleSubmit}\r\n                    heading = \"Add new to do!\"\r\n                    text = {text}\r\n                    setText={setText}\r\n                    day={day}\r\n                    setDay={setDay}\r\n                    time={time}\r\n                    setTime={setTime}\r\n                    todoProject={todoProject}\r\n                    setTodoProject={setTodoProject}\r\n                    projects={projects}\r\n                    showButtons={true}\r\n                    setShowModal={setShowModal}\r\n                ></TodoForm>\r\n            </Modal>\r\n        </div>\r\n    )\r\n}\r\nexport default AddNewTodo","import React, { useContext,useState } from \"react\";\r\nimport { CalendarDate, CaretUp } from \"react-bootstrap-icons\";\r\nimport { calendarItems } from '../constants'\r\nimport { TodoContext } from \"../context\";\r\nimport { useSpring, animated } from 'react-spring'\r\n\r\nfunction Calendar(){\r\n    // SATATE\r\n    const [showMenu, setShowMenu] = useState(true)\r\n\r\n    //Context\r\n    const { setSelectedProject } = useContext(TodoContext)\r\n\r\n    // ANIMATION\r\n    const spin = useSpring({\r\n        transform : showMenu ? 'rotate(0deg)' : 'rotate(180deg)',\r\n        config : { friction : 10 }\r\n    })\r\n\r\n    const menuAnimation = useSpring({\r\n        display : showMenu ? 'block' : 'none',\r\n        lineHeight : showMenu ? 1.2 : 0\r\n    })\r\n\r\n    return(\r\n        <div className=\"Calendar\">\r\n            <div className=\"header\">\r\n                <div className=\"title\">\r\n                    <CalendarDate size=\"18\"></CalendarDate>\r\n                    <p>Calendar</p>\r\n                </div>\r\n                <animated.div style={spin} onClick={() => setShowMenu(!showMenu)} className=\"btns\">\r\n                    <span>\r\n                        <CaretUp size=\"20\"></CaretUp>\r\n                    </span>\r\n                </animated.div>\r\n            </div>\r\n            <animated.div style={menuAnimation} className=\"items\">\r\n                {\r\n                    calendarItems.map( item => \r\n                        <div className=\"item\" key={item} onClick={ () => setSelectedProject(item)}>\r\n                            {item}\r\n                        </div>\r\n                        )\r\n                }\r\n            </animated.div>\r\n        </div>\r\n    )\r\n}\r\nexport default Calendar","import React from \"react\";\r\n\r\nfunction ProjectForm({ handleSubmit, heading, value, setValue, setShowModal, confirmButtonText}){\r\n    return(\r\n        <form onSubmit={handleSubmit} className=\"ProjectForm\">\r\n            <h3>{heading}</h3>\r\n            <input \r\n                value={value}\r\n                onChange={(e) => setValue(e.target.value)}\r\n                type='text'\r\n                placeholder='new project name...'\r\n                autoFocus>\r\n            </input>\r\n            <button className='cancel' role='button' onClick={() => setShowModal(false)}>\r\n                cancel\r\n            </button>\r\n            <button className=\"confirm\">\r\n                {confirmButtonText}\r\n            </button>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default ProjectForm","import React, { useState } from \"react\";\r\nimport Modal from \"./Modal\"\r\nimport ProjectForm from \"./Projectform\";\r\nimport { Plus } from 'react-bootstrap-icons'\r\nimport firebase from '../firebase'\r\nfunction AddNewProject(){\r\n    // State\r\n    const [showModal, setShowModal] = useState(false)\r\n    const [projectName, setProjectName] = useState('')\r\n\r\n    function handleSubmit(e){\r\n        e.preventDefault()\r\n        if( projectName ){\r\n            const projectsRef = firebase.firestore().collection('projects')\r\n            projectsRef\r\n                .where('name', '==', projectName)\r\n                .get()\r\n                .then( querySnapshot => {\r\n                    if(querySnapshot.empty){\r\n                        projectsRef\r\n                            .add(\r\n                                {\r\n                                    name : projectName\r\n                                }\r\n                            )\r\n                    } else {\r\n                        alert('Project already exists!')\r\n                    }\r\n                })\r\n                setShowModal(false)\r\n                setProjectName('')\r\n        }\r\n    }\r\n    return(\r\n        <div className=\"AddNewProject\">\r\n            <div className=\"add-button\">\r\n                <span onClick={() => setShowModal(true)}>\r\n                    <Plus size=\"20\"></Plus>\r\n                </span>\r\n            </div>\r\n            <Modal showModal={showModal} setShowModal={setShowModal}>\r\n                <ProjectForm\r\n                    handleSubmit={handleSubmit}\r\n                    heading='New project'\r\n                    value={projectName}\r\n                    setValue={setProjectName}\r\n                    setShowModal={setShowModal}\r\n                    confirmButtonText='+ Add Project'\r\n                ></ProjectForm>\r\n            </Modal>\r\n        </div>\r\n    )\r\n}\r\nexport default AddNewProject","import React, { useContext, useState } from \"react\";\r\nimport ProjectForm from \"./Projectform\";\r\nimport firebase from \"@firebase/app-compat\";\r\nimport { TodoContext } from '../context'\r\nfunction RenameProject({project, setShowModal}){\r\n    const [newProjectName, setNewProjectName] = useState(project.name)\r\n\r\n    // CONTEXT\r\n    const { selectedProject, setSelectedProject } = useContext(TodoContext)\r\n\r\n    // rename Project\r\n    const renameProject = (project, newProjectName) => {\r\n        const projectsRef = firebase.firestore().collection('projects')\r\n        const todosRef = firebase.firestore().collection('todos')\r\n\r\n        const { name : oldProjectName } = project\r\n\r\n        projectsRef\r\n            .where('name', '==', newProjectName)\r\n            .get()\r\n            .then( querySnapshot => {\r\n                if(!querySnapshot.empty){\r\n                    alert('Project with the same name already exists!')\r\n                }else{\r\n                    projectsRef\r\n                        .doc(project.id)\r\n                        .update({\r\n                            name : newProjectName\r\n                        })\r\n                        .then( () => {\r\n                            todosRef\r\n                                .where('projectName', '==', oldProjectName)\r\n                                .get()\r\n                                .then( querySnapshot => {\r\n                                    querySnapshot.forEach( doc => {\r\n                                        doc.ref.update({\r\n                                            projectName : newProjectName\r\n                                        })\r\n                                    })\r\n                                })\r\n                                .then( () => {\r\n                                    if(selectedProject === oldProjectName){\r\n                                        setSelectedProject(newProjectName)\r\n                                    }\r\n                                })\r\n                        })\r\n                }\r\n            })\r\n    }\r\n\r\n\r\n    function handleSubmit(e){\r\n        e.preventDefault()\r\n        renameProject(project, newProjectName)\r\n        setShowModal(false)\r\n    }\r\n    return(\r\n        <div className=\"RenameProject\">\r\n            <ProjectForm\r\n                handleSubmit={handleSubmit}\r\n                heading='Edit project name'\r\n                value={newProjectName}\r\n                setValue={setNewProjectName}\r\n                setShowModal={setShowModal}\r\n                confirmButtonText='Confirm'>\r\n            </ProjectForm>\r\n        </div>\r\n    )\r\n}\r\nexport default RenameProject","import React, { useContext, useState } from \"react\";\r\nimport { Pencil, XCircle } from \"react-bootstrap-icons\";\r\nimport Modal from \"./Modal\";\r\nimport RenameProject from \"./RenameProject\";\r\nimport { TodoContext } from '../context'\r\nimport firebase from \"@firebase/app-compat\";\r\nimport { useTransition, useSpring, animated } from 'react-spring'\r\n\r\nfunction Project({project, edit}){\r\n    // Context\r\n    const { defaultProject, selectedProject, setSelectedProject } = useContext(TodoContext)\r\n\r\n    // State\r\n    const [showModal, setShowModal] = useState(false)\r\n\r\n    const deleteProject = project => {\r\n        firebase\r\n            .firestore()\r\n            .collection('projects')\r\n            .doc(project.id)\r\n            .delete()\r\n            .then( () => {\r\n                firebase\r\n                    .firestore()\r\n                    .collection('todos')\r\n                    .where('projectName', '==', project.name)\r\n                    .get()\r\n                    .then( (querySnapshot) => {\r\n                        querySnapshot.forEach( doc => {\r\n                            doc.ref.delete()\r\n                        })\r\n                    })\r\n            })\r\n            .then( () => {\r\n                if( selectedProject === project.name ){\r\n                    setSelectedProject(defaultProject)\r\n                }\r\n            })\r\n    }\r\n\r\n    // ANIMATION\r\n    const fadeIn = useSpring({\r\n        from : { marginTop : '-12px', opacity : 0 },\r\n        to : { marginTop : '0px', opacity : 1}\r\n    })\r\n    const btnTransitions = useTransition(edit, {\r\n        from : { opacity : 0, right : '-20px' },\r\n        enter : { opacity : 1, right : '0px' },\r\n        leave : { opacity : 0, right : '-20px' }\r\n    })\r\n\r\n    return(\r\n        <animated.div style={fadeIn} className=\"Project\">\r\n            <div className=\"name\" onClick={ () => setSelectedProject(project.name)}>\r\n                {project.name}\r\n            </div>\r\n            <div className=\"btns\">\r\n               { \r\n                    btnTransitions((props, editProject) =>\r\n                        editProject ?\r\n                        <animated.div style={props} className=\"edit-delete\">\r\n                            <span className=\"edit\" onClick={() => setShowModal(true)}>\r\n                                <Pencil size=\"13\"></Pencil>\r\n                            </span>\r\n                            <span className=\"delete\" onClick={ () => deleteProject(project)}>\r\n                                <XCircle size=\"13\"></XCircle>\r\n                            </span>\r\n                        </animated.div>\r\n                        :\r\n                        project.numOfTodos === 0 ?\r\n                        \"\"\r\n                        :\r\n                        <animated.div style={props} className=\"total-todos\">\r\n                            {project.numOfTodos}\r\n                        </animated.div>\r\n                    )\r\n                }\r\n            </div>\r\n            <Modal showModal={showModal} setShowModal={setShowModal}>\r\n                <RenameProject project={project} setShowModal={setShowModal}></RenameProject>\r\n            </Modal>\r\n        </animated.div>\r\n    )\r\n}\r\nexport default Project","import React, { useContext, useState } from \"react\";\r\nimport { CaretUp, Palette, PencilFill } from \"react-bootstrap-icons\";\r\nimport { TodoContext } from \"../context\";\r\nimport AddNewProject from './AddNewProject';\r\nimport Project from './Project';\r\nimport { useSpring, animated } from 'react-spring'\r\n\r\nfunction Projects(){\r\n    const [showMenu, setShowMenu] = useState(true);\r\n    const [edit, setEdit] = useState(false)\r\n    const pencilColor = edit ? \"#1EC94C\" : \"#000000\"\r\n    \r\n    //Context\r\n    const { projects } = useContext(TodoContext)\r\n\r\n     // ANIMATION\r\n     const spin = useSpring({\r\n        transform : showMenu ? 'rotate(0deg)' : 'rotate(180deg)',\r\n        config : { friction : 10 }\r\n    })\r\n\r\n    const menuAnimation = useSpring({\r\n        display : showMenu ? 'block' : 'none',\r\n        lineHeight : showMenu ? 1.2 : 0\r\n    })\r\n    \r\n    return(\r\n        <div className=\"Projects\">\r\n            <div className=\"header\">\r\n                <div className=\"title\">\r\n                    <Palette size=\"18\"></Palette>\r\n                    <p>Projects</p>\r\n                </div>\r\n                <div className=\"btns\">\r\n                    {\r\n                        showMenu && projects.length > 0 &&\r\n                        <span className='edit' onClick={ () => setEdit(edit => !edit)}>\r\n                            <PencilFill size=\"15\" color={pencilColor}></PencilFill>\r\n                        </span>\r\n                    }\r\n                    <AddNewProject></AddNewProject>\r\n                    <animated.span\r\n                        className='arrow'\r\n                        onClick={() => setShowMenu(!showMenu)}\r\n                        style={spin}>\r\n                        <CaretUp size=\"20\"></CaretUp>\r\n                    </animated.span>\r\n                </div>\r\n            </div>\r\n            <animated.div style={menuAnimation} className=\"items\">\r\n                {\r\n                    projects.map( project =>\r\n                        <Project\r\n                            project={project}\r\n                            key={project.id}\r\n                            edit={edit}\r\n                        ></Project>\r\n                    )\r\n                }\r\n            </animated.div>\r\n        </div>\r\n    )\r\n}\r\nexport default Projects","import React, { useState, useContext } from \"react\";\r\nimport { ArrowClockwise, CheckCircleFill, Circle, Trash } from \"react-bootstrap-icons\";\r\nimport firebase from '../firebase'\r\nimport moment from \"moment\";\r\nimport { TodoContext } from '../context'\r\nimport { useSpring, useTransition, animated } from 'react-spring'\r\n\r\nfunction Todo({todo}){\r\n    //State\r\n    const [hover, setHover] = useState(false)\r\n\r\n    //Context\r\n    const { selectedTodo, setSelectedTodo} = useContext(TodoContext)\r\n\r\n    const deleteTodo = todo => {\r\n        firebase\r\n            .firestore()\r\n            .collection('todos')\r\n            .doc(todo.id)\r\n            .delete()\r\n    }\r\n\r\n    const checkTodo = todo => {\r\n        firebase\r\n            .firestore()\r\n            .collection('todos')\r\n            .doc(todo.id)\r\n            .update({\r\n                checked : !todo.checked\r\n            })\r\n    }\r\n\r\n    const repeatNextDay = todo => {\r\n        const nextDayDate = moment(todo.date, 'MM/DD/YYYY').add(1, 'days')\r\n\r\n        const repeatedTodo = {\r\n            ...todo,\r\n            checked : false,\r\n            date : nextDayDate.format('MM/DD/YYYY'),\r\n            day : nextDayDate.format('d')\r\n        }\r\n\r\n        delete repeatedTodo.id\r\n\r\n        firebase\r\n            .firestore()\r\n            .collection('todos')\r\n            .add(repeatedTodo)\r\n    }\r\n\r\n    const handleDelete = todo => {\r\n        deleteTodo(todo)\r\n\r\n        if(selectedTodo === todo){\r\n            setSelectedTodo(false)\r\n        }\r\n    }\r\n\r\n    // ANIMATION\r\n    const fadeIn = useSpring({\r\n        from : { marginTop : '-12px', opacity : 0 },\r\n        to : { marginTop : '0px', opacity : 1}\r\n    })\r\n\r\n    const checkTransitions = useTransition(todo.checked, {\r\n        from : { position : 'absolute', transform : 'scale(0)' },\r\n        enter : { transform : 'scale(1)' },\r\n        leave : { transform : 'scale(0)' }\r\n    })\r\n\r\n    return(\r\n        <animated.div style={fadeIn} className=\"Todo\">\r\n            <div \r\n                className=\"todo-container\"\r\n                onMouseEnter={() => setHover(true)}\r\n                onMouseLeave={() => setHover(false)}>\r\n\r\n                <div className=\"check-todo\" onClick={ () => checkTodo(todo)}>\r\n                    {\r\n                        checkTransitions((props, checked) => \r\n                            checked ?\r\n                            <animated.span style={props} className=\"checked\">\r\n                                <CheckCircleFill color=\"#bebebe\"></CheckCircleFill>\r\n                            </animated.span>\r\n                            :\r\n                            <animated.span style={props} className=\"unchecked\">\r\n                                <Circle color={todo.color}></Circle>\r\n                            </animated.span>\r\n                        )\r\n                    }\r\n                </div>\r\n                <div className=\"text\" onClick={ () => setSelectedTodo(todo)}>\r\n                    <p style={{color : todo.checked ? '#bebebe' : '#000000'}}>{todo.text}</p>\r\n                    <span>{todo.time} - {todo.projectName}</span>\r\n                    <div className={`line ${todo.checked ? 'line-through' : ''}`}></div>\r\n                </div>\r\n                <div className=\"add-to-next-day\" onClick={() => repeatNextDay(todo)}>\r\n                    {\r\n                        todo.checked &&\r\n                        <span>\r\n                            <ArrowClockwise></ArrowClockwise>\r\n                        </span>\r\n                    }\r\n                </div>\r\n                <div className=\"delete-todo\" onClick={ () => handleDelete(todo)}>\r\n                    {\r\n                        (hover || todo.checked) &&\r\n                        <span>\r\n                            <Trash></Trash>\r\n                        </span>\r\n                    }\r\n                </div>\r\n            </div>\r\n        </animated.div>\r\n    )\r\n}\r\nexport default Todo","import moment from 'moment'\r\nimport React, { useEffect, useState } from 'react'\r\nimport Todo from './Todo'\r\n\r\nfunction Next7Days({ todos }) {\r\n    const [weekTodos, setWeekTodos] = useState([])\r\n\r\n    useEffect(() => {\r\n        const days = ['0', '1', '2', '3', '4', '5', '6']\r\n\r\n        const sortedTodosByDay = days.map(day => {\r\n            return {\r\n                todos: todos.filter(todo => todo.day === day),\r\n                number: day\r\n            }\r\n        })\r\n\r\n        const today = parseInt(moment().format('d'))\r\n\r\n        const arrangeDays = sortedTodosByDay.slice(today).concat(sortedTodosByDay.slice(0, today))\r\n\r\n        setWeekTodos(arrangeDays)\r\n    }, [todos])\r\n\r\n    return (\r\n        <div className='Next7Days'>\r\n            {\r\n                weekTodos.map(day =>\r\n                    <div key={day.number}>\r\n                        <div className='day'>\r\n                            <div className='name'>\r\n                                {moment(day.number, 'd').format('dddd')}\r\n                                {day.number === moment().format('d') && ' (Today)'}\r\n                            </div>\r\n                            <div className='total-todos'>\r\n                                ({day.todos.length})\r\n                            </div>\r\n                        </div>\r\n                        <div className='todos'>\r\n                            {\r\n                                day.todos.map(todo =>\r\n                                    <Todo key={todo.id} todo={todo} />\r\n                                )\r\n                            }\r\n                        </div>\r\n                    </div>\r\n\r\n                )\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Next7Days","import React, {useContext} from \"react\";\r\nimport Todo from './Todo';\r\nimport Next7Days from './Next7Days';\r\nimport { TodoContext } from '../context'\r\n\r\nfunction Todos(){\r\n    const { todos, selectedProject } = useContext(TodoContext)\r\n    \r\n    return(\r\n        <div className=\"Todos\">\r\n            <div className=\"selected-project\">\r\n                {selectedProject}\r\n            </div>\r\n            <div className=\"todos\">\r\n                {\r\n                    selectedProject === \"next 7 days\" ?\r\n                    <Next7Days todos={todos}></Next7Days>\r\n                    :\r\n                    todos.map(todo =>\r\n                        <Todo todo={todo} key={todo.id}></Todo>\r\n                    )\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default Todos","import React, {useState, useEffect, useContext} from \"react\";\r\nimport TodoForm from \"./TodoForm\";\r\nimport moment from \"moment\";\r\nimport { TodoContext } from '../context'\r\nimport firebase from \"@firebase/app-compat\";\r\n\r\nfunction EditTodo(){\r\n    // State\r\n    const [text, setText] = useState('')\r\n    const [day, setDay] = useState(new Date())\r\n    const [time, setTime] = useState(new Date())\r\n    const [todoProject, setTodoProject] = useState('')\r\n\r\n    // Context\r\n    const { selectedTodo, projects } = useContext(TodoContext)\r\n\r\n    useEffect(() => {\r\n        if(selectedTodo){\r\n            setText(selectedTodo.text)\r\n            setDay(moment(selectedTodo.date, 'MM/DD/YYYY'))\r\n            setTime(moment(selectedTodo.time, 'hh:mm A'))\r\n            setTodoProject(selectedTodo.projectName)\r\n        }\r\n    }, [selectedTodo])\r\n\r\n    useEffect(() => {\r\n        if(selectedTodo){\r\n            firebase\r\n                .firestore()\r\n                .collection('todos')\r\n                .doc(selectedTodo.id)\r\n                .update({\r\n                    text,\r\n                    date : moment(day).format('MM/DD/YYYY'),\r\n                    day : moment(day).format('d'),\r\n                    time : moment(time).format('hh:mm A'),\r\n                    projectName : todoProject\r\n                })\r\n        }\r\n\r\n    }, [text, day, time, todoProject])\r\n    \r\n    function handleSubmit(e){\r\n\r\n    }\r\n    return(\r\n        <div>\r\n            {\r\n                selectedTodo &&\r\n                    <div className=\"EditTodo\">\r\n                        <div className=\"header\">\r\n                            Edit Todo\r\n                        </div>\r\n                        <div className=\"container\">\r\n                            <TodoForm \r\n                                    handleSubmit={handleSubmit}\r\n                                    text = {text}\r\n                                    setText={setText}\r\n                                    day={day}\r\n                                    setDay={setDay}\r\n                                    time={time}\r\n                                    setTime={setTime}\r\n                                    todoProject={todoProject}\r\n                                    setTodoProject={setTodoProject}\r\n                                    projects={projects}\r\n                                ></TodoForm>\r\n                        </div>\r\n                    </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\nexport default EditTodo","import './App.css';\nimport Sidebar from './components/Sidebar';\nimport Main from './components/Main';\nimport User from './components/User';\nimport AddNewTodo from './components/AddNewTodo';\nimport Calendar from './components/Calendar';\nimport Projects from './components/Projects';\nimport Todos from './components/Todos';\nimport EditTodo from './components/EditTodo';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Sidebar>\n        <User></User>\n        <AddNewTodo></AddNewTodo>\n        <Calendar></Calendar>\n        <Projects></Projects>\n      </Sidebar>\n\n      <Main>\n        <Todos></Todos>\n        <EditTodo></EditTodo>\n      </Main>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { TodoContextProvider } from './context'\n\nReactDOM.render(\n  <TodoContextProvider>    \n        <App />\n  </TodoContextProvider>\n  , document.getElementById('root')\n)"],"sourceRoot":""}